Tue Mar 23 19:32:21 UTC 2010  Trevor Fields  <fields_t@ociweb.com>

        * OpenDDS version 2.1.2 released.

Tue Mar 23 15:57:27 UTC 2010  Steven Stallion  <stallions@ociweb.com>

        * NEWS:

          Updated documentation for next release.

Tue Mar 23 15:45:06 UTC 2010  Steven Stallion  <stallions@ociweb.com>

        * NEWS:
        * README:

          Updated documentation for next release.

Mon Mar 22 21:54:24 UTC 2010  Yan Dai  <dai_y@ociweb.com>

        * NEWS:

          Added changes for next release.

Mon Mar 22 19:53:59 UTC 2010  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Renamed remove_all_control_msgs() to remove_all_msgs() as the function
          was changed to removes all messages sent by a datawriter.

        * dds/DCPS/WriteDataContainer.cpp:

          Removed remove_sample call on samples in sending_data or released_data
          lists as it's redundant with remove_all_msgs().

Fri Mar 19 22:25:14 UTC 2010  Mike Martinez  <martinez_m@ociweb.com>

        * performance-tests/Bench/bin/expandColors.pl:
        * performance-tests/Bench/bin/extract.pl:
        * performance-tests/Bench/bin/genstats.pl:
        * performance-tests/Bench/bin/mktable.pl:
        * performance-tests/Bench/bin/reduce.pl:
        * performance-tests/Bench/bin/run_test:
        * performance-tests/Bench/doc/userguide.html:
        * performance-tests/Bench/tests/thru/test-commands.txt:

          Updating documentation in scripts and user guide.

Fri Mar 19 21:23:54 UTC 2010  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp:

          - Added lock in data_dropped as it could be called by the
            the transport thread that does not hold the lock before
            calling it. Otherwise, it may cause SEGV when write()
            thraad request transport removing a sample while sample
            is released due to tranport delayed notification.
          - Added code to remove released_data_ samples in
            unregister_all().

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.inl:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          - Fixed an issue that DataWriter request transport to remove
            a sample while the sample is released by transport.
            This could happen when there are more number of datalinks
            upon sample removing than sending. A datalink is requested
            to remove sample is not requested for sending. The sample
            may already be released while the link uses the sample to
            find in it's storage.

            Wrappered sample to remove with TransportSendElement so the
            DataWriter data_dropped() will be called only when sample is
            removed from all links it originally sent to.
            The TransportSendElement instance also carry the information
            if a data_dropped is called to DataWriter, if it does, then
            stop using the sample to remove from the rest links because
            the sample may already be released.

          - Added/update methods to accommodate the changes above.
          - Added transport_shutdown to TransportSendStrategy to avoid
            delayed notification upon transport release as the transport
            release is normally called after DataWriter is destroyed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Added receive_strategy_ nil value check in handle_close()
          to avoid crash if receive_strategy_ is wiped before
          handle_close() called.

Tue Mar 16 21:01:14 UTC 2010  Steven Stallion  <stallions@ociweb.com>

        * dds/DCPS/transport/multicast/ReliableSession.h:
        * dds/DCPS/transport/multicast/ReliableSession.cpp:

          Fixed deadlock caused by shared mutex between starting and
          acknowledgement critical sections.

Tue Mar 16 14:18:51 UTC 2010  Mike Martinez  <martinez_m@ociweb.com>

        * performance-tests/Bench/tests/latency/p1-16000.ini:

          Update to use new datamodel.  Thanks to Don Busch for finding
          this.

Thu Mar 11 23:54:38 UTC 2010  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp:

          Fixed a bug in obtain_buffer() when max_blocking_time is 0 or very small
          period. The condition makes the write() not wait for old sample releasing.
          In this case, the TIMEOUT error code should be returned.

        * dds/DCPS/DataWriterImpl.cpp:

          Turned off the error logging as obtain_buffer() returns TIMEOUT error code.

        * tests/DCPS/FooTest5/InstanceDataMap.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/run_test.pl:

          - Adjusted result verify.
          - Log timeout error return from write() only if DCPS_debug_level > 0.

Wed Mar 10 16:25:55 UTC 2010  Steven Stallion  <stallions@ociweb.com>

        * dds/DCPS/transport/framework/ThreadSynchStrategy.h:
        * dds/DCPS/transport/framework/ThreadSynchStrategy_rch.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:

          Added support for optionally specifying a ThreadSynchStrategy
          implementation at construction-time (submitted by Don Busch).

        * dds/DCPS/transport/udp/UdpConfiguration.cpp:
        * dds/DCPS/transport/multicast/MulticastConfiguration.cpp:

          Updated UDP-based transports to use a NullSynchStrategy by
          default; this prevents spurious threads from being spawned
          for each created DataLink (submitted by Don Busch).

        * dds/DCPS/transport/udp/UdpTransport.h:
        * dds/DCPS/transport/udp/UdpTransport.cpp:

          Updated support for endpoint addressing; DataLinks are created
          per unique endpoint rather than RepoId (submitted by Don Busch).

Tue Mar  9 19:08:05 UTC 2010  Steven Stallion  <stallions@ociweb.com>

        * NEWS:
        * README:

          Updated documentation for next release.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
