<?xml version="1.0" encoding="UTF-8"?>
<!--

    Author:  Steven Stallion
-->
<project name="opendds-ant" default="archive" basedir=".">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>

    <property environment="env"/>

    <property file="${basedir}/build.properties"/>

    <!--
        Project Paths
    -->
    <path id="project.classpath">
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/tests"/>

        <pathelement location="${src.dir}"/>
        <pathelement location="${test.dir}"/>

        <fileset dir="${lib.dir}"/>
    </path>

    <!--
        Project Targets
    -->
    <target name="all" depends="clean, test, archive"
            description="Meta-target for: clean, test, archive"/>

    <target name="clean" depends="test.clean"
            description="Delete all build artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>

        <uptodate property="project.uptodate"
                  targetfile="${build.dir}/${ant.project.name}.jar">
            <srcfiles dir="${src.dir}"/>
        </uptodate>
    </target>

    <target name="compile" depends="init" unless="project.uptodate"
            description="Compile classes under src/">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               target="${project.target}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="archive" depends="compile" unless="project.uptodate"
            description="Archive compiled classes and resources">
        <jar destfile="${build.dir}/${ant.project.name}.jar"
             compress="${jar.compress}"
             index="${jar.index}">
            <fileset dir="${build.dir}/classes"/>
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </jar>
    </target>

    <target name="test.clean">
        <delete dir="${build.dir}/tests"/>
    </target>

    <target name="test.init" depends="init">
        <mkdir dir="${build.dir}/tests"/>
    </target>

    <target name="test.compile" depends="compile, test.init">
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               target="${project.target}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="test" depends="test.compile"
            description="Run test suites under test/">
        <junit haltonerror="true"
               haltonfailure="true"
               printsummary="true"
               fork="true">
            <formatter type="brief"/>
            <batchtest todir="${build.dir}/tests">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath refid="project.classpath"/>
            <jvmarg value="-ea"/>   <!-- enable assertions -->
        </junit>
    </target>
</project>
