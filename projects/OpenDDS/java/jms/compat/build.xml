<?xml version="1.0" encoding="UTF-8"?>
<!--

    Author:  Steven Stallion
-->
<project name="opendds-jms-compat" default="test" basedir="."
         xmlns:opendds="antlib:org.opendds.ant">

    <property name="jms.basedir" value="${basedir}/.."/>
    <property name="jms.lib.dir" value="${jms.basedir}/lib"/>

    <property name="build.dir" value="${basedir}/build"/>
    <property name="conf.dir" value="${basedir}/conf"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>
    <property name="web.dir" value="${basedir}/web"/>

    <property file="build.properties"/>

    <!--
        Project Paths
    -->
    <taskdef uri="antlib:org.opendds.ant"
             resource="org/opendds/ant/antlib.xml"
             classpath="${jms.lib.dir}/opendds-ant.jar"/>

    <opendds:init environment="env"/>

    <path id="project.classpath">
        <fileset dir="${jms.lib.dir}"/>

        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/tests"/>

        <pathelement location="${src.dir}"/>
        <pathelement location="${test.dir}"/>

        <fileset dir="${lib.dir}"/>
        <fileset dir="${web.dir}/WEB-INF/lib"/>
    </path>

    <taskdef resource="cargo.tasks"
             classpathref="project.classpath"/>

    <macrodef name="antjms">
        <attribute name="target"/>
        <sequential>
            <subant buildpath="${jms.basedir}" target="@{target}"/>
        </sequential>
    </macrodef>

    <!--
        Project Targets
    -->
    <target name="all" depends="clean, jboss42x"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/modules"/>
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="ejb-jar" depends="test.compile">
        <jar jarfile="${build.dir}/modules/${ant.project.name}-ejb.jar"
             compress="${jar.compress}"
             index="${jar.index}"
             update="true">
            <fileset dir="${build.dir}/classes"/>
            <fileset dir="${src.dir}">
                <include name="META-INF/ejb-jar.xml"/>
                <include name="META-INF/jboss.xml"/>
            </fileset>
        </jar>
    </target>

    <target name="war" depends="test.compile">
        <war warfile="${build.dir}/modules/${ant.project.name}-web.war"
             webxml="${web.dir}/WEB-INF/web.xml"
             update="true">
            <classes dir="${build.dir}/tests"/>
            <fileset dir="${web.dir}">
                <exclude name="WEB-INF/web.xml"/> <!-- silly ant -->
            </fileset>
        </war>
    </target>

    <target name="ear" depends="ejb-jar, war">
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}/META-INF/service"/>
            <filterset>
                <filter token="VERSION" value="${opendds.version}"/>
            </filterset>
        </copy>

        <ear destfile="${build.dir}/${ant.project.name}.ear"
             appxml="${src.dir}/META-INF/application.xml"
             update="true">
            <fileset dir="${build.dir}/modules"/>
            <metainf dir="${src.dir}/META-INF">
                <exclude name="application.xml"/> <!-- silly ant -->
                <exclude name="ejb-jar.xml"/>
                <exclude name="jboss.xml"/>
                <exclude name="service/**"/>
            </metainf>
            <zipfileset dir="${build.dir}" prefix="META-INF/service">
                <include name="*-ds.xml"/>
            </zipfileset>
        </ear>
    </target>

    <target name="setup" depends="ear" unless="bootstrap.invoked">
        <condition property="server.jvmargs"
                   value="-Dopendds.native.debug=true">
            <and>
                <os family="windows"/>
                <istrue value="${native.debug}"/>
            </and>
        </condition>
        <property name="server.jvmargs" value=""/>

        <antjms target="rar"/> <!-- ensure RAR is built -->

        <echo message="Starting DCPSInfoRepo in ${env.DDS_ROOT}"/>
        <delete file="repo.ior"/>
        <exec executable="${env.DDS_ROOT}/bin/DCPSInfoRepo" spawn="true">
            <arg line="-ORBListenEndpoints iiop://:6666"/>
            <arg line="-ORBSvcConf ${conf.dir}/tcp.conf"/>
        </exec>

        <waitfor maxwait="10" maxwaitunit="second">
            <available file="repo.ior"/>
        </waitfor>

        <property name="bootstrap.invoked" value="INVOKED"/>
    </target>

    <target name="teardown">
        <echo message="Stopping DCPSInfoRepo in ${env.DDS_ROOT}"/>
        <exec executable="${env.DDS_ROOT}/bin/repoctl">
            <arg line="kill localhost:6666"/>
        </exec>
    </target>

    <!-- Start the JBoss instance with remote debugging enabled (for manual testing), wait for Ctrl-C.  Use the teardown target to stop DCPSInfoRepo.  -->
    <target name="startjboss" depends="setup">
        <cargo containerId="jboss42x" home="${env.JBOSS_HOME}" action="start" wait="true">
            <configuration>
                <property name="cargo.jvmargs" value="-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n -ea ${server.jvmargs}"/> <!-- enable assertions -->

                <!-- Deployables -->
                <deployable type="rar" file="${jms.basedir}/build/opendds-jms-${opendds.version}.rar"/>
                <deployable type="ear" file="${build.dir}/${ant.project.name}.ear"/>
            </configuration>
        </cargo>
    </target>

    <target name="jboss42x" depends="setup" if="jboss42x.enabled">
        <fail message="JBOSS_HOME is a required environment variable!" unless="env.JBOSS_HOME"/>

        <echo message="Using JBOSS_HOME: ${env.JBOSS_HOME}"/>
        <cargo containerId="jboss42x" home="${env.JBOSS_HOME}" action="start" wait="false">
            <configuration>
                <property name="cargo.jvmargs" value="-ea ${server.jvmargs}"/> <!-- enable assertions -->

                <!-- Deployables -->
                <deployable type="rar" file="${jms.basedir}/build/opendds-jms-${opendds.version}.rar"/>
                <deployable type="ear" file="${build.dir}/${ant.project.name}.ear"/>
            </configuration>
        </cargo>

        <antcall target="test"/>

        <cargo containerId="jboss42x" home="${env.JBOSS_HOME}" action="stop">
            <configuration/>
        </cargo>
        <antcall target="teardown"/>
    </target>

    <target name="test.clean">
        <delete dir="${build.dir}/tests"/>
    </target>

    <target name="test.init" depends="init">
        <mkdir dir="${build.dir}/tests"/>
    </target>

    <target name="test.compile" depends="test.init">
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               debug="true"
               source="${project.source}"
               classpathref="project.classpath"
               includeAntRuntime="no">
        </javac>
    </target>

    <target name="test" depends="test.compile">
        <junit haltonerror="false"
               haltonfailure="false"
               printsummary="true"
               fork="true">
            <formatter type="xml"/>
            <batchtest todir="${build.dir}/tests">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath refid="project.classpath"/>
            <jvmarg value="-ea"/> <!-- enable assertions -->
        </junit>
    </target>

    <target name="test.report">
        <junitreport todir="${build.dir}/tests">
            <fileset dir="${build.dir}/tests">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${build.dir}/tests/report"/>
        </junitreport>
    </target>
</project>
