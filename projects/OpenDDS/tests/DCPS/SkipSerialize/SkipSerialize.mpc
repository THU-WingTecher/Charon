
project(DDS*idl): dcps_test_idl_only_lib {
  idlflags      += -Wb,stub_export_include=SkipSerialize_export.h \
                   -Wb,stub_export_macro=SkipSerialize_Export -SS
  dcps_ts_flags += -Wb,export_macro=SkipSerialize_Export
  dynamicflags  += SKIPSERIALIZE_BUILD_DLL

  TypeSupport_Files {
    SkipSerialize.idl
  }
}

project(DDS*Publisher): dcpsexe, dcps_test, dcps_transports_for_test, opendds_optional_security {

  exename   = publisher
  after    += DDS*idl
  libs     += DDS*idl

  Idl_Files {
  }

  Source_Files {
    publisher.cpp
    Writer.cpp
  }
}

project(DDS*Subscriber): dcpsexe, dcps_test, dcps_transports_for_test, opendds_optional_security {

  exename   = subscriber
  after    += DDS*idl
  libs     += DDS*idl

  Idl_Files {
  }

  Source_Files {
    subscriber.cpp
    DataReaderListener.cpp
  }
}
