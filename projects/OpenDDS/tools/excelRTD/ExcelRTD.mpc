project(ExcelRTD): taolib, dcpslib, dcps_inforepodiscovery, dcps_tcp, dcps_monitor, qt5_widgets, msvc_bigobj {
  requires += microsoft
  requires += built_in_topics
  includes += $(DDS_ROOT)/tools/monitor

  macros += _USRDLL RTDServer_EXPORTS
  macros += RTD_DLL_NAME=<%quote%>$(TargetFileName)<%quote%>

  specific(nmake) {
    // This project doesn't build with -type nmake because the generated
    // makefile doesn't have rules for the non-C++ files in the Source_Files
    // scope below (*.idl, *.def).
    requires += dummy_label
  }

  sharedname = OpenDDS_ExcelRTD
  dllout = $(DDS_ROOT)/lib
  libs += OpenDDS_monitor

  MOC_Files {
    gendir = .
    ../monitor/MonitorDataModel.h
  }

  Header_Files {
    RTDMonitor.h
    IRTDServer.h
    RTDDataThread.h
    RTDServerDLL.h
    RTDServer.h

    ../monitor/Options.h
    ../monitor/MonitorTask.h
    ../monitor/MonitorData.h
    ../monitor/MonitorDataModel.h
    ../monitor/MonitorDataStorage.h
    ../monitor/QosFormatter.h
    ../monitor/TreeNode.h
  }

  Source_Files {
    IRTDServer.idl

    RTDMonitor.cpp
    IRTDServer_i.c
    RTDDataThread.cpp
    RTDServer.def
    RTDServerDLL.cpp
    RTDServer.cpp

    MonitorDataModel_moc.cpp

    ../monitor/Options.cpp
    ../monitor/MonitorTask.cpp
    ../monitor/MonitorData.cpp
    ../monitor/MonitorDataModel.cpp
    ../monitor/MonitorDataStorage.cpp
    ../monitor/QosFormatter.cpp
  }

  IDL_Files {

  }

  specific(prop:microsoft) {
    moduledefinitionfile=./RTDServer.def
  }

  Resource_Files {
    resource.h
    Script.rc
  }

  Define_Custom(Excel_Addin) {

  }

  Excel_Addin_Files {
    OpenDDS.xlam
  }
}
